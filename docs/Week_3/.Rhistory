library(tidyverse)
View(evals)
tidyverse_conflicts()
moderndive::evals
View(evals)
evals
library(moderndive)
View(evals)
evals.scores <- evals |>
select(score, bty_avg)
evals.scores |>
skim()
library(skimr)
evals.scores |>
skim()
correlation <- c(-0.9999, -0.75, 0, 0.75, 0.9999)
cor_names <- c(`-1` = "(a)", `-0.75` = "(b)", `0` = "(c)", `0.75` = "(d)", `1` = "(e)")
n_sim <- 100
values <- NULL
for(i in seq_len(length(correlation))){
rho <- correlation[i]
sigma <- matrix(c(5, rho * sqrt(50), rho * sqrt(50), 10), 2, 2)
sim <- rmvnorm(
n = n_sim,
mean = c(20,40),
sigma = sigma
) %>%
as_data_frame() %>%
# mutate(correlation = round(rho, 2), name = as.character(rep(names(correlation)[i], n_sim)))
mutate(correlation = round(rho, 2))
values <- bind_rows(values, sim)
}
ggplot(data = values, mapping = aes(V1, V2)) +
geom_point() +
facet_wrap(~ correlation, nrow = 2, labeller = as_labeller(cor_names)) +
labs(x = "x", y = "y") +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
for(i in seq_len(length(correlation))){
rho <- correlation[i]
sigma <- matrix(c(5, rho * sqrt(50), rho * sqrt(50), 10), 2, 2)
sim <- rmvnorm(
n = n_sim,
mean = c(20,40),
sigma = sigma
) %>%
as_tibble() %>%
# mutate(correlation = round(rho, 2), name = as.character(rep(names(correlation)[i], n_sim)))
mutate(correlation = round(rho, 2))
values <- bind_rows(values, sim)
}
for(i in seq_len(length(correlation))){
rho <- correlation[i]
sigma <- matrix(c(5, rho * sqrt(50), rho * sqrt(50), 10), 2, 2)
sim <- mvtnorm::rmvnorm(
n = n_sim,
mean = c(20,40),
sigma = sigma
) %>%
as_tibble() %>%
# mutate(correlation = round(rho, 2), name = as.character(rep(names(correlation)[i], n_sim)))
mutate(correlation = round(rho, 2))
values <- bind_rows(values, sim)
}
i=1
rho <- correlation[i]
sigma <- matrix(c(5, rho * sqrt(50), rho * sqrt(50), 10), 2, 2)
sim <- mvtnorm::rmvnorm(
n = n_sim,
mean = c(20,40),
sigma = sigma
) %>%
as_tibble() %>%
# mutate(correlation = round(rho, 2), name = as.character(rep(names(correlation)[i], n_sim)))
mutate(correlation = round(rho, 2))
sim
values <- bind_rows(values, sim)
values
i=2
rho <- correlation[i]
sigma <- matrix(c(5, rho * sqrt(50), rho * sqrt(50), 10), 2, 2)
sim <- mvtnorm::rmvnorm(
n = n_sim,
mean = c(20,40),
sigma = sigma
) %>%
as_tibble() %>%
# mutate(correlation = round(rho, 2), name = as.character(rep(names(correlation)[i], n_sim)))
mutate(correlation = round(rho, 2))
values <- bind_rows(values, sim)
n_sim <- 100
values <- NULL
for(i in seq_len(length(correlation))){
rho <- correlation[i]
sigma <- matrix(c(5, rho * sqrt(50), rho * sqrt(50), 10), 2, 2)
sim <- mvtnorm::rmvnorm(
n = n_sim,
mean = c(20,40),
sigma = sigma
) %>%
as_tibble() %>%
# mutate(correlation = round(rho, 2), name = as.character(rep(names(correlation)[i], n_sim)))
mutate(correlation = round(rho, 2))
values <- bind_rows(values, sim)
}
correlation <- c(-0.9999, -0.75, 0, 0.75, 0.9999)
cor_names <- c(`-1` = "(a)", `-0.75` = "(b)", `0` = "(c)", `0.75` = "(d)", `1` = "(e)")
n_sim <- 100
values <- NULL
for(i in seq_len(length(correlation))){
rho <- correlation[i]
sigma <- matrix(c(5, rho * sqrt(50), rho * sqrt(50), 10), 2, 2)
sim <- mvtnorm::rmvnorm(
n = n_sim,
mean = c(20,40),
sigma = sigma
) %>%
as_tibble() %>%
# mutate(correlation = round(rho, 2), name = as.character(rep(names(correlation)[i], n_sim)))
mutate(correlation = round(rho, 2))
values <- bind_rows(values, sim)
}
ggplot(data = values, mapping = aes(V1, V2)) +
geom_point() +
facet_wrap(~ correlation, nrow = 2, labeller = as_labeller(cor_names)) +
labs(x = "x", y = "y") +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
cor_names
head(values)
values |> mutate(corr_lb = paste("rho==",correlation,sep=" "))
values <- values |> mutate(corr_lb = paste("rho==",correlation,sep=""))
ggplot(data = values, mapping = aes(V1, V2)) +
geom_point() +
facet_wrap(~ corr_lb, nrow = 2, labeller = label_parsed()) +
labs(x = "x", y = "y") +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
ggplot(data = values, mapping = aes(V1, V2)) +
ggplot(data = values, mapping = aes(V1, V2)) +
geom_point() +
facet_wrap(~ corr_lb, nrow = 2, labeller = label_parsed) +
labs(x = "x", y = "y") +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
ggplot(data = values, mapping = aes(V1, V2)) +
geom_point() +
facet_wrap(~ corr_lb, nrow = 2, labeller = label_parsed) +
labs(x = "x", y = "y") +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
evals.scores |>
get_correlation(formula = score ~ bty_avg)
ggplot(evals.scores, aes(x = bty_avg, y = score)) +
geom_point() +
labs(x = "Beauty Score", y = "Teaching Score",
title = "Relationship of teaching and beauty scores")
box <- data_frame(x=c(7.6, 8, 8, 7.6, 7.6), y=c(4.75, 4.75, 5.1, 5.1, 4.75))
box <- tibble(x=c(7.6, 8, 8, 7.6, 7.6), y=c(4.75, 4.75, 5.1, 5.1, 4.75))
p1 <- ggplot(evals.scores, aes(x = bty_avg, y = score)) +
geom_point() +
labs(x = "Beauty Score", y = "Teaching Score",
title = "Regular scatterplot") +
geom_path(data = box, aes(x=x, y=y), col = "red", size = 1)
set.seed(76)
p1 <- ggplot(evals.scores, aes(x = bty_avg, y = score)) +
geom_point() +
labs(x = "Beauty Score", y = "Teaching Score",
title = "Regular scatterplot") +
geom_path(data = box, aes(x=x, y=y), col = "red", linewidth = 1)
set.seed(76)
p2 <- ggplot(evals.scores, aes(x = bty_avg, y = score)) +
geom_jitter() +
labs(x = "Beauty Score", y = "Teaching Score",
title = "Jittered scatterplot") +
geom_path(data = box, aes(x=x, y=y), col = "red", linewidth = 1)
grid.arrange(p1, p2, ncol=2)
p1+p2
gridExtra::grid.arrange(p1, p2, ncol=2)
model <- lm(score ~ bty_avg, data = evals.scores)
model
index <- which(evals.scores$bty_avg == 7.333 & evals.scores$score == 4.9)
target_point <- model %>%
get_regression_points() %>%
slice(index)
x <- target_point$bty_avg
y <- target_point$score
y_hat <- target_point$score_hat
resid <- target_point$residual
ggplot(evals.scores, aes(x = bty_avg, y = score)) +
geom_point() +
labs(x = "Beauty Score", y = "Teaching Score",
title = "Relationship of teaching and beauty scores") +
geom_smooth(method = "lm", se = FALSE) +
annotate("point", x = x, y = y, col = "red", size = 3) +
annotate("point", x = x, y = y_hat, col = "red", shape = 15, size = 3) +
annotate("segment", x = x, xend = x, y = y, yend = y_hat, color = "blue",
arrow = arrow(type = "closed", length = unit(0.02, "npc")))
regression.points <- get_regression_points(model)
regression.points
autoplot(model)
ggfortify::autoplot(model)
install.packages("ggfortify")
ggfortify::autoplot(model)
library(ggfortify)
autoplot(model)
ggplot(regression.points, aes(x = bty_avg, y = residual)) +
geom_point() +
labs(x = "Beauty Score", y = "Residual") +
geom_hline(yintercept = 0, col = "blue", line_width = 1)
ggplot(regression.points, aes(x = bty_avg, y = residual)) +
geom_point() +
labs(x = "Beauty Score", y = "Residual") +
geom_hline(yintercept = 0, col = "blue", size = 1)
ggplot(regression.points, aes(x = bty_avg, y = residual)) +
geom_point() +
labs(x = "Beauty Score", y = "Residual") +
geom_hline(yintercept = 0, col = "blue", linewidth = 1)
ggplot(regression.points, aes(x = score_hat, y = residual)) +
geom_point() +
labs(x = "Fitted values", y = "Residual") +
geom_hline(yintercept = 0, col = "blue", linewidth = 1)
ggplot(regression.points, aes(x = residual)) +
geom_histogram(binwidth = 0.25, color = "white") +
labs(x = "Residual")
library(gapminder)
gapminder2007 <- gapminder |>
dplyr::filter(year == 2007) |>
select(country, continent, lifeExp)
glimpse(gapminder2007)
gapminder2007 |>
select(continent, lifeExp) |>
skim()
lifeExp.continent <- gapminder2007 |>
group_by(continent) |>
summarize(median = median(lifeExp), mean = mean(lifeExp))
lifeExp.continent
lifeExp.continent <- gapminder2007 |>
summarize(median = median(lifeExp), mean = mean(lifeExp),.by = continent)
lifeExp.continent
ggplot(gapminder2007, aes(x = continent, y = lifeExp)) +
geom_boxplot() +
labs(x = "Continent", y = "Life expectancy (years)",
title = "Life expectancy by continent")
lifeExp.by.continent <- gapminder2007 %>%
group_by(continent) %>%
summarize(median = median(lifeExp), mean = mean(lifeExp),.by =continent)
lifeExp.by.continent <- gapminder2007 |>
summarize(median = median(lifeExp), mean = mean(lifeExp),.by = continent)
mean.africa <- lifeExp.by.continent |>
filter(continent == "Africa") |>
pull(mean)
mean.africa
lifeExp.by.continent |>
filter(continent == "Africa")
gapminder2007 |>
group_by(continent) %>%
summarize(mean = mean(lifeExp)) %>%
mutate(`mean vs Africa` = mean - mean.africa) %>%
knitr::kable(
digits = 2,
booktabs = TRUE
)
lifeExp.model <- lm(lifeExp ~ continent, data = gapminder2007)
get_regression_table(lifeExp.model)
54.8 +15.9
gapminder2007
regression_points <- get_regression_points(lifeExp.model)
regression_points
ggplot(regression_points, aes(x = continent, y = residual)) +
geom_jitter(width = 0.1) +
labs(x = "Continent", y = "Residual") +
geom_hline(yintercept = 0, col = "blue")
ggplot(regression_points, aes(x = residual)) +
geom_histogram(binwidth = 5, color = "white") +
labs(x = "Residual")
webexercises::add_to_quarto()
?select
Cred
library(ISLR)
ISLR::Credit
head(Credit)
Cred = Credit |>
select(c(Balance,Limit,Income))
Cred
Cred |>
skim()
Cred |>
cor()
ggplot(Cred, aes(x = Limit, y = Balance)) +
geom_point() +
labs(x = "Credit limit (in $)", y = "Credit card balance (in $)",
title = "Relationship between balance and credit limit") +
geom_smooth(method = "lm", se = FALSE)
ggplot(Cred, aes(x = Income, y = Balance)) +
geom_point() +
labs(x = "Income (in $1000)", y = "Credit card balance (in $)",
title = "Relationship between balance and income") +
geom_smooth(method = "lm", se = FALSE)
library(plotly)
plot_ly(Cred, x = ~Income, y = ~Limit, z = ~Balance,
type = "scatter3d", mode = "markers")
Balance.model <- lm(Balance ~ Limit + Income, data = Cred)
get_regression_table(Balance.model)
autoplot(Balance.model)
model$residuals
model_output <- data.frame(res= model$residuals, yhat = model$fitted.values)
model_output |> head()
model_output <- data.frame(residuals = model$residuals, score_hat  = model$fitted.values)
model_output |> head()
54.8 + 15.
54.8 +15.9
x <- c("AndrewElliott", "ColinTorney", "DirkHusmeier", "CraigAlexander", "VinnyDavies")
sample)x,2
sample(x,2)
install.packages("tidymodels")
library(tidyverse)
install.packages("vctrs")
library(tidyverse)
library(tidymodels)
library(vctrs)
detach("package:vctrs", unload = TRUE)
install.packages("vctrs")
library(tidyverse)
library(tidyverse)
detach("package:tidyverse", unload = TRUE)
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
library(tidyverse)
library(tidymodels)
install.packages("tibble")
install.packages("tibble")
